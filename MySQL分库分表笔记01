第一步：安装mysql数据（此处略过）
第二部：安装mycat。去官网下载相关版本.
        注意：此处当时我用的是1.6版本的mycat 当时遇到单库分表出现问题，后面重新下来了1.6.5版本mycat来做操作的。
				配置mycat环境变量。
				1、vim /etc/profile
				2、
				export MYCAT_HOME=/usr/mycat
				export PATH=${MYCAT_HOME}/bin:$PATH
				3、在/etc/profile中添加环境变量后，使用source /etc/profile 刷新环境变量，让mycat环境变量立即生效。
				4、修改 config目录下server.xml、rule.xml、schema.xml对应的三个配置文件。（此处我没有修改server.xml，rule.xml和schema.xml这里只保留了修改后的文件）				
################################################[rule.xml]###########################################################################
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mycat:rule SYSTEM "rule.dtd">
<mycat:rule xmlns:mycat="http://io.mycat/">
        <tableRule name="rule2-new">
                <rule>
                        <columns>id</columns>
                        <algorithm>mod-long2</algorithm>
                </rule>
        </tableRule>
        <tableRule name="mod-long">
                <rule>
                        <columns>id</columns>
                        <algorithm>mod-long</algorithm>
                </rule>
        </tableRule>
        <function name="mod-long" class="io.mycat.route.function.PartitionByMod">
                <!-- how many data nodes -->
                <property name="count">3</property>
        </function>

        <function name="mod-long2" class="io.mycat.route.function.PartitionByMod">
                <!-- how many data nodes -->
                <property name="count">2</property>
        </function>
</mycat:rule>
##############################################【schema.xml】#############################################################################
<?xml version="1.0"?>
<!DOCTYPE mycat:schema SYSTEM "schema.dtd">
<mycat:schema xmlns:mycat="http://io.mycat/">
        <schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100">
                <table name="users" primaryKey="ID" autoIncrement="true" dataNode="dn1,dn2,dn3" rule="mod-long"/>
                <table name="item" primaryKey="ID" autoIncrement="true" dataNode="dn1,dn2" rule="rule2-new"/>
                <table name="orders" primaryKey="ID" autoIncrement="true" dataNode="dn1" subTables="orders$1-3" rule="mod-long" />
        </schema>
        <dataNode name="dn1" dataHost="localhost1" database="db01" />
        <dataNode name="dn2" dataHost="localhost1" database="db02" />
        <dataNode name="dn3" dataHost="localhost1" database="db03" />
        <dataHost name="localhost1" maxCon="1000" minCon="10" balance="0" writeType="0" dbType="mysql" dbDriver="native" switchType="1"  slaveThreshold="100">
                <heartbeat>select user()</heartbeat>
                <writeHost host="hostM1" url="127.0.0.1:3306" user="root" password="123456"/>
        </dataHost>
</mycat:schema>
###########################################################################################################################

./bin/mycat console 用来查看错误
./bin/mycat start 用来启动mycat
./bin/mycat stop 用来停止mycat
./bin/mycat restart 用来重启mycat


 mysql -uroot -p123456 -h127.0.0.1 -P8066 -DTESTDB 用来登录mycat集群客户端
 
 第三部：执行脚本创建数据、插入数据、分析执行计划、查看执行结果

-- 分别创建三个数据库 db01、db02、db03
CREATE DATABASE db01;
CREATE DATABASE db02;
CREATE DATABASE db03;
-- 分别在 db01、db02、db03 中创建users表，用来模拟分库分表操作
CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `name` varchar(255) ,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


-- 分别在 db01、db02中创建item表，用来模拟分库分表操作
CREATE TABLE `item` (
  `id` int(11) NOT NULL,
  `name` varchar(255) ,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- 分别在 db01 中创建orders1、orders2、orders3 三张表，用来模拟单库分表操作
CREATE TABLE `orders1` (
  `id` int(11) NOT NULL,
  `name` varchar(255) ,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `orders2` (
  `id` int(11) NOT NULL,
  `name` varchar(255) ,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `orders3` (
  `id` int(11) NOT NULL,
  `name` varchar(255) ,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- 执行下面插入语句
INSERT INTO item (id,NAME) VALUES(1,'zhangsan');
INSERT INTO item (id,NAME) VALUES(2,'lisi');

INSERT INTO users (id,NAME) VALUES(1,'zhangsan');
INSERT INTO users (id,NAME) VALUES(2,'lisi');
INSERT INTO users (id,NAME) VALUES(3,'wangwu');

INSERT INTO orders (id,NAME) VALUES(1,'zhangsan');
INSERT INTO orders (id,NAME) VALUES(2,'lisi');
INSERT INTO orders (id,NAME) VALUES(3,'wangwu');

-- 查看执行计划和结果
EXPLAIN SELECT * FROM item;
SELECT * FROM item;

EXPLAIN SELECT * FROM users;
SELECT * FROM users;

EXPLAIN SELECT * FROM orders;
SELECT * FROM orders;